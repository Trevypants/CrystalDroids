name: Build and Deploy to Google Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch:


env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  APP_NAME_BACKEND: ${{ secrets.GCP_APP_NAME_BACKEND }}
  APP_NAME_FRONTEND: ${{ secrets.GCP_APP_NAME_FRONTEND }}
  REGISTRY_NAME: ${{ secrets.GCP_ARTIFACT_REGISTRY }}
  SERVICE_ACCOUNT_EMAIL: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

jobs:
  build-and-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Authenticate with Google Cloud
      - id: "auth"
        uses: google-github-actions/auth@v1.1.1
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

      # Setup gcloud CLI/SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Authorize Docker push
        run: gcloud auth configure-docker $REGION-docker.pkg.dev

      - name: Build and tag the docker images
        run: |-
          docker build -f Dockerfile.backend --tag $REGION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$APP_NAME_BACKEND:$GITHUB_SHA . 
          docker build -f Dockerfile.frontend --tag $REGION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$APP_NAME_frontend:$GITHUB_SHA . 

      - name: Push the images to the Google Artifact Registry (GAR)
        run: |-
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$APP_NAME_BACKEND:$GITHUB_SHA
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$APP_NAME_FRONTEND:$GITHUB_SHA

      - name: Deploy Backend to Cloud Run
        run: |-
          gcloud run deploy $APP_NAME \
          --region $REGION \
          --image $REGION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$APP_NAME_BACKEND:$GITHUB_SHA \
          --platform "managed" \
          --service-account $SERVICE_ACCOUNT_EMAIL \
          --port 8000 \
          --quiet

      - name: Deploy Frontend to Cloud Run
        run: |-
          gcloud run deploy $APP_NAME \
          --region $REGION \
          --image $REGION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$APP_NAME_FRONTEND:$GITHUB_SHA \
          --platform "managed" \
          --service-account $SERVICE_ACCOUNT_EMAIL \
          --port 80 \
          --quiet